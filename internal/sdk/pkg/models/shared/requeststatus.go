// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RequestStatus string

const (
	RequestStatusDenied   RequestStatus = "Denied"
	RequestStatusPending  RequestStatus = "Pending"
	RequestStatusApproved RequestStatus = "Approved"
)

func (e RequestStatus) ToPointer() *RequestStatus {
	return &e
}

func (e *RequestStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Denied":
		fallthrough
	case "Pending":
		fallthrough
	case "Approved":
		*e = RequestStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestStatus: %v", v)
	}
}
