// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BuiltinWorkflowType string

const (
	BuiltinWorkflowTypeBuiltin BuiltinWorkflowType = "Builtin"
)

func (e BuiltinWorkflowType) ToPointer() *BuiltinWorkflowType {
	return &e
}

func (e *BuiltinWorkflowType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Builtin":
		*e = BuiltinWorkflowType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BuiltinWorkflowType: %v", v)
	}
}

type BuiltinWorkflow struct {
	Type  BuiltinWorkflowType `json:"type"`
	Value BuiltinWorkflowEnum `json:"value"`
}
