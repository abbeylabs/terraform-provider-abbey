// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReviewWorkflowLegacyWrapperType string

const (
	ReviewWorkflowLegacyWrapperTypeGrantKit ReviewWorkflowLegacyWrapperType = "GrantKit"
)

func (e ReviewWorkflowLegacyWrapperType) ToPointer() *ReviewWorkflowLegacyWrapperType {
	return &e
}

func (e *ReviewWorkflowLegacyWrapperType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GrantKit":
		*e = ReviewWorkflowLegacyWrapperType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReviewWorkflowLegacyWrapperType: %v", v)
	}
}

type ReviewWorkflowLegacyWrapper struct {
	Type  ReviewWorkflowLegacyWrapperType `json:"type"`
	Value ReviewWorkflow                  `json:"value"`
}
