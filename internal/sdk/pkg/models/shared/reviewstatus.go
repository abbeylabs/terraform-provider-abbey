// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReviewStatus string

const (
	ReviewStatusPending  ReviewStatus = "Pending"
	ReviewStatusDenied   ReviewStatus = "Denied"
	ReviewStatusApproved ReviewStatus = "Approved"
	ReviewStatusCanceled ReviewStatus = "Canceled"
)

func (e ReviewStatus) ToPointer() *ReviewStatus {
	return &e
}

func (e *ReviewStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Pending":
		fallthrough
	case "Denied":
		fallthrough
	case "Approved":
		fallthrough
	case "Canceled":
		*e = ReviewStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReviewStatus: %v", v)
	}
}
