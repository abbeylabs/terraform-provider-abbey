// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OneOfReviewerQuantifierType string

const (
	OneOfReviewerQuantifierTypeOneOf OneOfReviewerQuantifierType = "OneOf"
)

func (e OneOfReviewerQuantifierType) ToPointer() *OneOfReviewerQuantifierType {
	return &e
}

func (e *OneOfReviewerQuantifierType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OneOf":
		*e = OneOfReviewerQuantifierType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OneOfReviewerQuantifierType: %v", v)
	}
}

type OneOfReviewerQuantifier struct {
	Reviewers []UserQuery                 `json:"reviewers,omitempty"`
	Type      OneOfReviewerQuantifierType `json:"type"`
}
