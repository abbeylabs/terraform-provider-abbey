// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BuiltinWorkflowAllOfVariantType string

const (
	BuiltinWorkflowAllOfVariantTypeAllOf BuiltinWorkflowAllOfVariantType = "AllOf"
)

func (e BuiltinWorkflowAllOfVariantType) ToPointer() *BuiltinWorkflowAllOfVariantType {
	return &e
}

func (e *BuiltinWorkflowAllOfVariantType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AllOf":
		*e = BuiltinWorkflowAllOfVariantType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BuiltinWorkflowAllOfVariantType: %v", v)
	}
}

type BuiltinWorkflowAllOfVariant struct {
	Type  BuiltinWorkflowAllOfVariantType `json:"type"`
	Value BuiltinWorkflowAllOf            `json:"value"`
}
