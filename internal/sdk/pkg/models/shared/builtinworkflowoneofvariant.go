// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BuiltinWorkflowOneOfVariantType string

const (
	BuiltinWorkflowOneOfVariantTypeOneOf BuiltinWorkflowOneOfVariantType = "OneOf"
)

func (e BuiltinWorkflowOneOfVariantType) ToPointer() *BuiltinWorkflowOneOfVariantType {
	return &e
}

func (e *BuiltinWorkflowOneOfVariantType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OneOf":
		*e = BuiltinWorkflowOneOfVariantType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BuiltinWorkflowOneOfVariantType: %v", v)
	}
}

type BuiltinWorkflowOneOfVariant struct {
	Type  BuiltinWorkflowOneOfVariantType `json:"type"`
	Value BuiltinWorkflowOneOf            `json:"value"`
}
