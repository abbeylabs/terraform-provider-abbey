// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DemoParamsPermission string

const (
	DemoParamsPermissionReadWrite DemoParamsPermission = "read_write"
)

func (e DemoParamsPermission) ToPointer() *DemoParamsPermission {
	return &e
}

func (e *DemoParamsPermission) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "read_write":
		*e = DemoParamsPermission(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DemoParamsPermission: %v", v)
	}
}

type DemoParams struct {
	Email      string               `json:"email"`
	Permission DemoParamsPermission `json:"permission"`
}
