// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UserQueryAuthIDVariantType string

const (
	UserQueryAuthIDVariantTypeAuthID UserQueryAuthIDVariantType = "AuthId"
)

func (e UserQueryAuthIDVariantType) ToPointer() *UserQueryAuthIDVariantType {
	return &e
}

func (e *UserQueryAuthIDVariantType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AuthId":
		*e = UserQueryAuthIDVariantType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserQueryAuthIDVariantType: %v", v)
	}
}

type UserQueryAuthIDVariant struct {
	Type  UserQueryAuthIDVariantType `json:"type"`
	Value string                     `json:"value"`
}
