# This section defines how the artifacts should be archived
archives:
  - format: zip
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'

# Set necessary hooks before go releaser executes
before:
  hooks:
    - go mod tidy

# Build customization
builds:
  - binary: '{{ .ProjectName }}_v{{ .Version }}'
    env:
      - CGO_ENABLED=0
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - -trimpath
    ldflags:
      - '-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}'
    goos:
      - freebsd
      - windows
      - linux
      - darwin
    goarch:
      - amd64
      - '386'
      - arm
      - arm64
    ignore:
      - goos: darwin
        goarch: '386'

# Include a changelog or not
changelog:
  skip: true

# Checksum and signing configuration
checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_SHA256SUMS'
  algorithm: sha256
  extra_files:
    - glob: 'terraform-registry-manifest.json'
      name_template: '{{ .ProjectName }}_{{ .Version }}_manifest.json'

# This section defines how the artifacts should be published
release:
  extra_files:
    - glob: 'terraform-registry-manifest.json'
      name_template: '{{ .ProjectName }}_{{ .Version }}_manifest.json'

# This section defines how the artifacts should be signed
signs:
  - artifacts: checksum
    args:
      - '--batch'
      - '--local-user'
      - '{{ .Env.GPG_FINGERPRINT }}'
      - '--output'
      - '${signature}'
      - '--detach-sign'
      - '${artifact}'

# Snapshot configuration in case you want to create non-release builds
snapshot:
  name_template: '{{ .Tag }}-snapshot'
